Flamea.org - Technical SpecificationDocument TitleTechnical SpecificationVersion1.0AuthorGemini Development PartnerDate2025-06-09Time04:55 AM SAST1.0 Architecture OverviewFlamea.org is developed as a Static Site Architecture. The platform consists of pre-built HTML, CSS, and JavaScript files served directly to the user's browser. This architecture ensures high performance, enhanced security, and cost-effective hosting. All dynamic functionality, including user authentication, data storage, and interactive tools, is handled on the client-side via JavaScript, which communicates with external backend services.2.0 Frontend TechnologiesHTML5: Used for the semantic structure and markup of all web pages.CSS3 & Tailwind CSS: Styling is primarily managed by the Tailwind CSS framework, loaded via a CDN. This utility-first approach allows for rapid development of a responsive and consistent user interface. A single custom stylesheet (assets/css/style.css) is used for global styles and complex UI elements that extend beyond Tailwind's scope.JavaScript (ES6+ Modules): All client-side logic, interactivity, and communication with backend services are written in modern JavaScript (ES6+). The project heavily utilizes ES6 Modules (import/export) for clean, organized, and maintainable code, with scripts in HTML tagged as type="module".3.0 Backend as a Service (BaaS) - Google FirebaseThe platform leverages Google Firebase for all backend functionality, eliminating the need for a traditional server environment.Firebase Authentication: Manages all user identity functions, including secure email/password registration, Google Sign-In, session management, and password resets.Cloud Firestore (Database): A NoSQL database used for all persistent user data. Data is stored in a structured manner where each user's data is sandboxed under their unique User ID (UID) (e.g., users/{userId}/progress/{docId}). This ensures privacy and is enforced by strict Firestore Security Rules.Cloud Storage for Firebase: Used for secure user file uploads. This handles the "Upload CV" functionality on the Life CV Dashboard. Storage Security Rules ensure users can only access and write to their own designated storage folder.4.0 Third-Party Services & APIsGoogle Maps Platform API: Powers the Resource Directory's location-based search wizard. It is used for:Places API: Provides address autocompletion.Geolocation API: Allows users to find services near their current location.Distance Matrix API: Calculates the distance between the user and service locations.QR Code Generation API: A free, public API (e.g., qrserver.com) is used to dynamically generate the unique QR codes for user certificates in the Training Hub.5.0 Core LibrariesFont Awesome: Provides a comprehensive icon library used throughout the site for visual clarity.Tone.js: A Web Audio framework used to generate sound effects for the "Legal Eagle" game, creating an engaging user experience without external audio files.jsPDF & html2canvas: Client-side libraries used in the Dashboard and Parenting Plan tools to convert HTML content into downloadable/shareable PDF documents directly in the user's browser.Revision HistoryVersionDateAuthorChanges1.02025-06-09GeminiInitial document creation.